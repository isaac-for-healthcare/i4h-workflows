--- a/source/isaaclab/isaaclab/sim/spawners/from_files/from_files.py.orig	2025-05-28 13:06:41.085653484 +0800
+++ b/source/isaaclab/isaaclab/sim/spawners/from_files/from_files.py	2025-05-28 13:07:18.634451335 +0800
@@ -11,7 +11,7 @@
 import isaacsim.core.utils.stage as stage_utils
 import omni.kit.commands
 import omni.log
-from pxr import Gf, Sdf, Usd
+from pxr import Gf, Sdf, Semantics, Usd

 from isaaclab.sim import converters, schemas
 from isaaclab.sim.utils import bind_physics_material, bind_visual_material, clone, select_usd_variants
@@ -173,8 +173,22 @@
     # It isn't bright enough and messes up with the user's lighting settings
     omni.kit.commands.execute("ToggleVisibilitySelectedPrims", selected_paths=[f"{prim_path}/SphereLight"])

+    prim = prim_utils.get_prim_at_path(prim_path)
+    # Apply semantic tags
+    if hasattr(cfg, "semantic_tags") and cfg.semantic_tags is not None:
+        # note: taken from replicator scripts.utils.utils.py
+        for semantic_type, semantic_value in cfg.semantic_tags:
+            # deal with spaces by replacing them with underscores
+            semantic_type_sanitized = semantic_type.replace(" ", "_")
+            semantic_value_sanitized = semantic_value.replace(" ", "_")
+            # set the semantic API for the instance
+            instance_name = f"{semantic_type_sanitized}_{semantic_value_sanitized}"
+            sem = Semantics.SemanticsAPI.Apply(prim, instance_name)
+            # create semantic type and data attributes
+            sem.CreateSemanticTypeAttr().Set(semantic_type)
+            sem.CreateSemanticDataAttr().Set(semantic_value)
     # return the prim
-    return prim_utils.get_prim_at_path(prim_path)
+    return prim


 """
