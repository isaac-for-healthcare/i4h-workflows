%YAML 1.2
# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
extensions:
  - libgxf_videodecoder.so
  - libgxf_videodecoderio.so
  - libgxf_videoencoder.so
  - libgxf_videoencoderio.so

application:
  title: Telesurgery with DDS
  version: 1.0
  inputFormats: []
  outputFormats: ["screen"]

resources:
  cpu: 1
  gpu: 1
  memory: 1Gi
  gpuMemory: 1Gi

scheduler:
  check_recession_period_ms: 0
  worker_thread_number: 5
  stop_on_deadlock: true
  stop_on_deadlock_timeout: 500

protocol:
  hid: dds # dds or streamsdk
  video: dds # dds or streamsdk

video:
  width: 1024
  height: 576
  device: /dev/video0

hid:
  qos_provider: "qos_profiles.xml"
  domain_id: 1
  participant_qos: "TelesurgeryLibrary::TelesurgeryApplication"
  reader_qos: "TelesurgeryLibrary::Command"
  # hid_device_filters:
  #   - joystick1
  #   - keyboard1
  #   - mouse1

camera_info_publisher:
  qos_provider: "qos_profiles.xml"
  domain_id: 1
  topic: "camera_info"
  participant_qos: "TelesurgeryLibrary::TelesurgeryApplication"
  writer_qos: "TelesurgeryLibrary::CameraInfo"
  encoded_channels: 3

video_encoder_request:
  inbuf_storage_type: 1
  codec: 0
  input_format: "yuv420planar"
  profile: 2
  bitrate: 20000000
  framerate: 60
  config: "pframe_cqp"
  rate_control_mode: 0
  qp: 20
  iframe_interval: 5

video_encoder_response:
  outbuf_storage_type: 1

rgba_to_rgb_format_converter:
  in_dtype: "rgba8888"
  out_dtype: "rgb888"

rgb_to_yuv420_format_converter:
  in_dtype: "rgb888"
  out_dtype: "yuv420"

tensor_to_video_buffer:
  video_format: "yuv420"



bitstream_reader:
  outbuf_storage_type: 0
  aud_nal_present: 0

video_decoder_request:
  inbuf_storage_type: 1

video_decoder_response:
  outbuf_storage_type: 1

decoder_output_format_converter:
  in_dtype: "nv12"
  out_dtype: "rgb888"
