struct CameraInfo {
  int64 frame_num;
  int64 width;
  int64 height;
  int8 channels;
  sequence <octet> data;

  sequence <string, 6> joint_names;
  sequence <double, 6> joint_positions;

  int64 hid_capture_timestamp;  // Timestamp when the HID event was captured in nanoseconds
  int64 hid_publish_timestamp;  // Timestamp when the HID event was published by the Surgeon app in nanoseconds
  int64 hid_receive_timestamp;  // Timestamp when the event was received by IS in nanoseconds
  int64 hid_to_sim_timestamp;  // Timestamp when received by the HidToSimPushOp in nanoseconds
  int64 hid_process_timestamp;  // Timestamp when the event was processed by the IS controller

  int64 video_acquisition_timestamp; // Timestamp when the _data_acquisition_callback is called in nanoseconds
  int64 video_data_bridge_enter_timestamp; // Timestamp when the compute() is called in AsyncDataPushOp in nanoseconds
  int64 video_data_bridge_emit_timestamp; // Timestamp right before the emit call in AsyncDataPushOp in nanoseconds
  int64 video_encoder_enter_timestamp; // Timestamp when the compute() is called in NvVideoEncoderOp in nanoseconds
  int64 video_encoder_emit_timestamp; // Timestamp right before the emit call in NvVideoEncoderOp in nanoseconds
  int64 video_publisher_enter_timestamp; // Timestamp when the camera data is received by the DDSCameraInfoPublisherOp in nanoseconds
  int64 video_publisher_emit_timestamp; // Timestamp right before the emit call in NvVideoEnDDSCameraInfoPublisherOpcoderOp in nanoseconds

  uint64 frame_size;
  uint64 encoded_frame_size;
  uint64 message_id;
};
